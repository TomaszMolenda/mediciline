<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<http auto-config="true" use-expressions="true">
		<csrf disabled="true" />
		<intercept-url pattern="/index**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/lek/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/lek/" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/list-medicines**" access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/login.html" />
		<logout logout-url="/logout"/>
		<session-management>
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="true"  />
			
		</session-management>
	</http>

	<authentication-manager>
	
 			<authentication-provider ref="customAuthenticationProvider"/>
<!-- 		<authentication-provider> -->
		
<!-- 			<jdbc-user-service data-source-ref="dataSource" -->
<!-- 				users-by-username-query="SELECT name, PASSWORD , 1 FROM User WHERE name = ?" -->
<!-- 				authorities-by-username-query="SELECT User.name, Role.name -->
<!--  				FROM User JOIN User_Role ON User.id = User_Role.users_id  -->
<!-- 				JOIN Role ON User_Role.roles_id = Role.id  -->
<!--  				WHERE User.name = ?" />  -->
<!-- 		</authentication-provider> -->

	</authentication-manager>

</beans:beans>